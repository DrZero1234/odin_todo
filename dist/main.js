(()=>{"use strict";var n={890:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,'html, body {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: minmax(auto,400px) minmax(250px,1fr);\n    grid-template-rows: min-content 1fr  min-content;\n    grid-template-areas: "header header"\n                         "sidebar main"\n                         "sidebar main"\n                         "footer footer"\n\n}\n\n/* HIDE ELEMENTS WHILE TOGGLING */\n.inactive {\n    display: none;\n}\n\n\n.page-header {\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    padding: 12px;\n    background-color: #0284C7;\n}\n\n.page-header > img {\n    margin-left: 45px;\n    height: 108px;\n}\n\n.sidebar,.main {\n    min-height: 100vh;\n}\n\n\n.sidebar {\n    display: flex;\n    grid-area: sidebar;\n    max-width: 1fr;\n    margin-top: 30px;\n    background-color: #0284C7;\n}\n\n.sidebar * {\n    cursor: pointer;\n}\n\nhx {\n    cursor: pointer;\n}\n\n#options {\n    list-style-type: none;\n}\n\n#project-list {\n    cursor: pointer;\n    word-break: break-all;\n    list-style-type: none;\n}\n\n\n/* Project text */\n\n#project-list > li {\n    list-style-type: none;\n}\n\n\n\n.main {\n    padding: 50px 220px;\n    grid-area: main;\n}\n\n.todo-wrapper {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n    \n}\n\n.todo-wrapper button {\n    background-color: #0284C7;\n    color: white;\n    width: fit-content;\n    font-weight: 800;\n    font-size: 24px;\n    padding: 6px;\n    cursor: pointer;\n}\n\n.todo-wrapper button:hover {\n    color: #0284C7;\n    background-color: white;\n}\n\n.todos {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    flex-wrap: wrap;\n    gap: 6px;\n}\n\n.todo {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    border: 2px solid red;\n    padding: 0px 8px;\n}\n\n#todo-title,#todo-description {\n    word-break: break-all;\n}\n\n#priority {\n    font-size: 36px;\n    color: red;\n    font-weight: 800;\n}\n\n.todo-actions,\n.todo-status {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.todo-actions img,\n.todo-status img {\n    height: 32px;\n}\n\n.todo-actions:hover {\n    cursor: pointer;\n}\n\nfooter {\n    grid-area: footer;\n    position: relative;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    padding: 20px;\n    text-align: center;\n    background-color: #000;\n    color: #fff\n}\n\n.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%) scale(0);\n    transition: 200ms ease-in-out;\n    border: 1px solid black;\n    border-radius: 12px;\n    z-index: 10;\n    background-color: white;\n    width: 500px;\n    max-width: 80%;\n}\n\n.modal.active {\n    transform: translate(-50%,-50%) scale(1);\n}\n\n.modal-header {\n    padding: 10px 15px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid black;\n}\n\n.modal-header .title {\n    font-size: 1.25rem;\n    font-weight: bold;\n}\n\n.modal-header .close-button {\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background: none;\n    font-size: 2rem;\n    font-weight: bold;\n}\n\n.modal-body {\n    padding: 10px 15px;\n}\n\n.modal-body form {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.modal-body form button {\n    min-width: 10%;\n    max-width: 20%;\n}\n\n.modal-body div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.modal-body textarea {\n    min-width: 100px;\n    max-width: 300px;\n    min-height: 100px;\n    max-height: 300px;\n    resize: none;\n}\n\n#overlay {\n    position: fixed;\n    opacity: 0; \n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, .5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}',"",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,2DAA2D;IAC3D,gDAAgD;IAChD;;;;;AAKJ;;AAEA,iCAAiC;AACjC;IACI,aAAa;AACjB;;;AAGA;IACI,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;;;AAGA;IACI,aAAa;IACb,kBAAkB;IAClB,cAAc;IACd,gBAAgB;IAChB,yBAAyB;AAC7B;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,qBAAqB;IACrB,qBAAqB;AACzB;;;AAGA,iBAAiB;;AAEjB;IACI,qBAAqB;AACzB;;;;AAIA;IACI,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,OAAO;IACP,eAAe;IACf,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,OAAO;IACP,mBAAmB;IACnB,8BAA8B;IAC9B,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,gBAAgB;AACpB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;;IAEI,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,OAAO;IACP,aAAa;IACb,kBAAkB;IAClB,sBAAsB;IACtB;AACJ;;AAEA;IACI,eAAe;IACf,QAAQ;IACR,SAAS;IACT,wCAAwC;IACxC,6BAA6B;IAC7B,uBAAuB;IACvB,mBAAmB;IACnB,WAAW;IACX,uBAAuB;IACvB,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,eAAe;IACf,gBAAgB;IAChB,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;IACjB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,MAAM;IACN,OAAO;IACP,SAAS;IACT,QAAQ;IACR,mCAAmC;IACnC,oBAAoB;IACpB,6BAA6B;AACjC;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB",sourcesContent:['html, body {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: minmax(auto,400px) minmax(250px,1fr);\n    grid-template-rows: min-content 1fr  min-content;\n    grid-template-areas: "header header"\n                         "sidebar main"\n                         "sidebar main"\n                         "footer footer"\n\n}\n\n/* HIDE ELEMENTS WHILE TOGGLING */\n.inactive {\n    display: none;\n}\n\n\n.page-header {\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    padding: 12px;\n    background-color: #0284C7;\n}\n\n.page-header > img {\n    margin-left: 45px;\n    height: 108px;\n}\n\n.sidebar,.main {\n    min-height: 100vh;\n}\n\n\n.sidebar {\n    display: flex;\n    grid-area: sidebar;\n    max-width: 1fr;\n    margin-top: 30px;\n    background-color: #0284C7;\n}\n\n.sidebar * {\n    cursor: pointer;\n}\n\nhx {\n    cursor: pointer;\n}\n\n#options {\n    list-style-type: none;\n}\n\n#project-list {\n    cursor: pointer;\n    word-break: break-all;\n    list-style-type: none;\n}\n\n\n/* Project text */\n\n#project-list > li {\n    list-style-type: none;\n}\n\n\n\n.main {\n    padding: 50px 220px;\n    grid-area: main;\n}\n\n.todo-wrapper {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n    \n}\n\n.todo-wrapper button {\n    background-color: #0284C7;\n    color: white;\n    width: fit-content;\n    font-weight: 800;\n    font-size: 24px;\n    padding: 6px;\n    cursor: pointer;\n}\n\n.todo-wrapper button:hover {\n    color: #0284C7;\n    background-color: white;\n}\n\n.todos {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    flex-wrap: wrap;\n    gap: 6px;\n}\n\n.todo {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    border: 2px solid red;\n    padding: 0px 8px;\n}\n\n#todo-title,#todo-description {\n    word-break: break-all;\n}\n\n#priority {\n    font-size: 36px;\n    color: red;\n    font-weight: 800;\n}\n\n.todo-actions,\n.todo-status {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.todo-actions img,\n.todo-status img {\n    height: 32px;\n}\n\n.todo-actions:hover {\n    cursor: pointer;\n}\n\nfooter {\n    grid-area: footer;\n    position: relative;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    padding: 20px;\n    text-align: center;\n    background-color: #000;\n    color: #fff\n}\n\n.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%) scale(0);\n    transition: 200ms ease-in-out;\n    border: 1px solid black;\n    border-radius: 12px;\n    z-index: 10;\n    background-color: white;\n    width: 500px;\n    max-width: 80%;\n}\n\n.modal.active {\n    transform: translate(-50%,-50%) scale(1);\n}\n\n.modal-header {\n    padding: 10px 15px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid black;\n}\n\n.modal-header .title {\n    font-size: 1.25rem;\n    font-weight: bold;\n}\n\n.modal-header .close-button {\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background: none;\n    font-size: 2rem;\n    font-weight: bold;\n}\n\n.modal-body {\n    padding: 10px 15px;\n}\n\n.modal-body form {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.modal-body form button {\n    min-width: 10%;\n    max-width: 20%;\n}\n\n.modal-body div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.modal-body textarea {\n    min-width: 100px;\n    max-width: 300px;\n    min-height: 100px;\n    max-height: 300px;\n    resize: none;\n}\n\n#overlay {\n    position: fixed;\n    opacity: 0; \n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, .5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}'],sourceRoot:""}]);const d=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var A=this[d][0];null!=A&&(a[A]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);o&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],d=0;d<n.length;d++){var A=n[d],c=o.base?A[0]+o.base:A[0],s=i[c]||0,l="".concat(c," ").concat(s);i[c]=s+1;var p=t(l),m={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=r(m,o);o.byIndex=d,e.splice(d,0,{identifier:l,updater:u,references:1})}a.push(l)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var d=t(i[a]);e[d].references--}for(var A=o(n,r),c=0;c<i.length;c++){var s=t(i[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),a=t.n(i),d=t(565),A=t.n(d),c=t(216),s=t.n(c),l=t(589),p=t.n(l),m=t(890),u={};u.styleTagTransform=p(),u.setAttributes=A(),u.insert=a().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=s(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;var C,f=new Uint8Array(16);function g(){if(!C&&!(C="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return C(f)}const B=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,I=function(n){return"string"==typeof n&&B.test(n)};for(var h=[],y=0;y<256;++y)h.push((y+256).toString(16).substr(1));const x=function(n,e,t){var o=(n=n||{}).random||(n.rng||g)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,e){t=t||0;for(var r=0;r<16;++r)e[t+r]=o[r];return e}return function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=(h[n[e+0]]+h[n[e+1]]+h[n[e+2]]+h[n[e+3]]+"-"+h[n[e+4]]+h[n[e+5]]+"-"+h[n[e+6]]+h[n[e+7]]+"-"+h[n[e+8]]+h[n[e+9]]+"-"+h[n[e+10]]+h[n[e+11]]+h[n[e+12]]+h[n[e+13]]+h[n[e+14]]+h[n[e+15]]).toLowerCase();if(!I(t))throw TypeError("Stringified UUID is invalid");return t}(o)};class b{constructor(n){this.id=x(),this.project_todos=new Object,this.name=n}storeProject(){return localStorage.setItem(this.id,JSON.stringify(this)),this}}class v{constructor(n,e,t,o=!1){this.id=x(),this.title=n,this.description=e,this.date=t,this.urgent=o,this.completed=!1}addTodo(n){n.project_todos[this.id]=JSON.stringify(this),localStorage.setItem(n.id,JSON.stringify(n))}}document.addEventListener("DOMContentLoaded",(()=>{})),L();const E=(n=e)=>{const e=document.querySelector(".todos");for(;n.firstChild;)n.removeChild(n.lastChild)},w=(n=L())=>{const e=document.querySelector(".todos"),t=document.querySelector(".todo-wrapper");E(e),n.sort().join(",")===L().sort().join(",")&&E(t),n.forEach((n=>{const t=document.createElement("div");t.className="todo",t.id=n.id;const o=document.createElement("div");o.className="todo-status";const r=document.createElement("span");r.id="priority",!0===n.urgent&&(r.textContent="!");const i=document.createElement("h3");i.id="todo-title",i.textContent=n.title;const a=document.createElement("span");a.id="todo-description",a.textContent=n.description;const d=document.createElement("span");d.id="todo",d.textContent=n.date;const A=document.createElement("div");A.className="todo-actions";const c=document.createElement("img");c.id="completed-todo",c.setAttribute("src","completed.png"),c.setAttribute("alt","Completed");const s=document.createElement("img");s.className="edit-todo",s.id=n.id,s.setAttribute("src","edit.png"),s.setAttribute("alt","Edit");const l=document.createElement("img");l.className="delete-todo",l.id=n.id,l.setAttribute("src","delete.png"),l.setAttribute("alt","Delete"),n.completed&&o.appendChild(c),o.appendChild(r),A.appendChild(s),A.appendChild(l),t.appendChild(o),t.appendChild(i),t.appendChild(a),t.appendChild(d),t.appendChild(A),e.appendChild(t)}))},j=()=>{const n=document.getElementById("project-modal"),e=document.getElementById("overlay");n.classList.contains("active")&&e.classList.contains("active")?(n.classList.remove("active"),e.classList.remove("active")):(n.classList.add("active"),e.classList.add("active"))},k=()=>{const n=document.getElementById("todo-modal"),e=document.getElementById("overlay");n.classList.contains("active")&&e.classList.contains("active")?(n.classList.remove("active"),e.classList.remove("active")):(n.classList.add("active"),e.classList.add("active"))},S=(n,e)=>{let t=function(n){switch(n){case"urgent":return"Urgent";case"completed":return"Completed";case"date":return"Today´s"}};const o=document.querySelector(".todo-wrapper");E(o);let r=document.getElementById("todos-title");if(r)r.textContent=`${t} todos`;else{const e=document.querySelector(".todo-wrapper"),o=document.createElement("h2");o.id="todo-title",o.textContent=`${t(n)} todos`,e.appendChild(o)}w(q(n,e))};function L(){const n=[];for(let e of T())for(let t of Object.keys(e.project_todos))n.push(JSON.parse(e.project_todos[t]));return n}function T(){let n=[];return Object.keys(localStorage).forEach((e=>{n.push(JSON.parse(localStorage.getItem(e)))})),n}function O(n){for(let e of T())if(e.id===n)return e}function N(n){let e=[];return Object.keys(O(n).project_todos).forEach((t=>{e.push(JSON.parse(O(n).project_todos[t]))})),e}function q(n,e){const t=L(),o=[];for(let r of t)r[n]===e&&o.push(r);return o}document.addEventListener("DOMContentLoaded",(()=>{!function(){localStorage.clear();let n=new b("Project1"),e=new b("Project2"),t=new v("Todo1","First todo","2022-12-31",!1),o=new v("Todo2","Second todo","1939-09-01",!0),r=new v("Todo3","Third Todo","2022-07-03",!0,!0);n.storeProject(),e.storeProject(),t.addTodo(n),o.addTodo(n),r.addTodo(e),t.addTodo(e)}(),console.log(q("urgent",!0)),console.log("Projects"),console.log(T()),console.log("Project Todos"),console.log(N(T()[0].id)),console.log("Todos"),console.log(L()),(()=>{const n=document.querySelector(".todos"),e=document.getElementById("project-list"),t=T(),o=document.querySelector(".todo-wrapper");E(e);const r=document.createElement("h2");r.id="todos-title";const i=document.createElement("button");i.id="new-project-btn",i.textContent="New Project",e.appendChild(i),t.forEach((t=>{E(o);const i=document.createElement("li");i.textContent=t.name,i.id=t.id,i.addEventListener("click",(()=>{E(n),E(o);const e=document.createElement("button");e.className="add-todo",e.id=t.id,e.textContent="+ Add Todo",e.addEventListener("click",(()=>{k(),document.getElementById("todo-modal").addEventListener("submit",(()=>{const n=O(t.id);console.log(n);const e=document.getElementById("todo-name").value,o=document.getElementById("new-todo-description").value,r=document.getElementById("todo-date").value;let i;i=!!document.getElementById("todo-priority").checked,new v(e,o,r,i).addTodo(n),w(Array.from(n.project_todos))}))})),r.textContent=t.name,o.appendChild(e),o.appendChild(r);const i=N(t.id);w(i)})),e.appendChild(i)}))})(),document.querySelector(".todo-wrapper");const n=document.getElementById("sidebar-todos"),e=document.getElementById("projects"),t=document.getElementById("urgent-todos"),o=document.getElementById("completed-todos"),r=document.getElementById("date-todos");t.addEventListener("click",(()=>{S("urgent",!0)})),o.addEventListener("click",(()=>{S("completed",!0)})),r.addEventListener("click",(()=>{S("date",(new Date).toISOString().slice(0,10))})),document.getElementById("new-project-btn").addEventListener("click",j),document.getElementById("close-project").addEventListener("click",j),document.getElementById("close-todo").addEventListener("click",k),document.querySelector(".create-project-btn").addEventListener("click",(()=>{const n=String(document.getElementById("project-name").value),e=new b(n);e.storeProject(),console.log(e);const t=O(e.id);j(),w(Array.from(t.project_todos))}));const i=document.getElementById("project-list"),a=i.querySelectorAll("li");console.log(i),e.addEventListener("click",(()=>{var n;"active"===(n=i).className?n.className="inactive":n.className="active"})),n.addEventListener("click",(()=>{w(),document.getElementById("todos-title").textContent="Every Todos"})),console.log(a),w()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,