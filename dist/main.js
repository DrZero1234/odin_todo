(()=>{"use strict";var n={890:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,'html, body {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: minmax(auto,400px) minmax(250px,1fr);\n    grid-template-rows: min-content 1fr  min-content;\n    grid-template-areas: "header header"\n                         "sidebar main"\n                         "sidebar main"\n                         "footer footer"\n\n}\n\n/* HIDE ELEMENTS WHILE TOGGLING */\n.inactive {\n    display: none;\n}\n\n\n.page-header {\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    padding: 12px;\n    background-color: #0284C7;\n}\n\n.page-header > img {\n    margin-left: 45px;\n    height: 108px;\n}\n\n.sidebar,.main {\n    min-height: 100vh;\n}\n\n\n.sidebar {\n    display: flex;\n    grid-area: sidebar;\n    max-width: 1fr;\n    margin-top: 30px;\n    background-color: #0284C7;\n}\n\n.sidebar * {\n    cursor: pointer;\n}\n\nhx {\n    cursor: pointer;\n}\n\n#options {\n    list-style-type: none;\n}\n\n#project-list {\n    cursor: pointer;\n    word-break: break-all;\n    list-style-type: none;\n}\n\n\n/* Project text */\n\n#project-list > li {\n    list-style-type: none;\n}\n\n\n\n.main {\n    padding: 50px 220px;\n    grid-area: main;\n}\n\n.todo-wrapper {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n    \n}\n\n.todo-wrapper button {\n    background-color: #0284C7;\n    color: white;\n    width: fit-content;\n    font-weight: 800;\n    font-size: 24px;\n    padding: 6px;\n    cursor: pointer;\n}\n\n.todo-wrapper button:hover {\n    color: #0284C7;\n    background-color: white;\n}\n\n.todos {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    flex-wrap: wrap;\n    gap: 6px;\n}\n\n.todo {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    border: 2px solid red;\n    padding: 0px 8px;\n}\n\n#todo-title,#todo-description {\n    word-break: break-all;\n}\n\n#priority {\n    font-size: 36px;\n    color: red;\n    font-weight: 800;\n}\n\n.todo-actions,\n.todo-status {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.todo-actions img,\n.todo-status img {\n    height: 32px;\n}\n\n.todo-actions:hover {\n    cursor: pointer;\n}\n\nfooter {\n    grid-area: footer;\n    position: relative;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    padding: 20px;\n    text-align: center;\n    background-color: #000;\n    color: #fff\n}\n\n.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%) scale(0);\n    transition: 200ms ease-in-out;\n    border: 1px solid black;\n    border-radius: 12px;\n    z-index: 10;\n    background-color: white;\n    width: 500px;\n    max-width: 80%;\n}\n\n.modal.active {\n    transform: translate(-50%,-50%) scale(1);\n}\n\n.modal-header {\n    padding: 10px 15px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid black;\n}\n\n.modal-header .title {\n    font-size: 1.25rem;\n    font-weight: bold;\n}\n\n.modal-header .close-button {\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background: none;\n    font-size: 2rem;\n    font-weight: bold;\n}\n\n.modal-body {\n    padding: 10px 15px;\n}\n\n.modal-body form {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.modal-body form button {\n    min-width: 10%;\n    max-width: 20%;\n}\n\n.modal-body div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.modal-body textarea {\n    min-width: 100px;\n    max-width: 300px;\n    min-height: 100px;\n    max-height: 300px;\n    resize: none;\n}\n\n#overlay {\n    position: fixed;\n    opacity: 0; \n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, .5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}',"",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,2DAA2D;IAC3D,gDAAgD;IAChD;;;;;AAKJ;;AAEA,iCAAiC;AACjC;IACI,aAAa;AACjB;;;AAGA;IACI,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;;;AAGA;IACI,aAAa;IACb,kBAAkB;IAClB,cAAc;IACd,gBAAgB;IAChB,yBAAyB;AAC7B;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,qBAAqB;IACrB,qBAAqB;AACzB;;;AAGA,iBAAiB;;AAEjB;IACI,qBAAqB;AACzB;;;;AAIA;IACI,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,OAAO;IACP,eAAe;IACf,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,OAAO;IACP,mBAAmB;IACnB,8BAA8B;IAC9B,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,gBAAgB;AACpB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;;IAEI,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,OAAO;IACP,aAAa;IACb,kBAAkB;IAClB,sBAAsB;IACtB;AACJ;;AAEA;IACI,eAAe;IACf,QAAQ;IACR,SAAS;IACT,wCAAwC;IACxC,6BAA6B;IAC7B,uBAAuB;IACvB,mBAAmB;IACnB,WAAW;IACX,uBAAuB;IACvB,YAAY;IACZ,cAAc;AAClB;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,8BAA8B;AAClC;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,eAAe;IACf,gBAAgB;IAChB,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,cAAc;IACd,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;IACjB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,MAAM;IACN,OAAO;IACP,SAAS;IACT,QAAQ;IACR,mCAAmC;IACnC,oBAAoB;IACpB,6BAA6B;AACjC;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB",sourcesContent:['html, body {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: minmax(auto,400px) minmax(250px,1fr);\n    grid-template-rows: min-content 1fr  min-content;\n    grid-template-areas: "header header"\n                         "sidebar main"\n                         "sidebar main"\n                         "footer footer"\n\n}\n\n/* HIDE ELEMENTS WHILE TOGGLING */\n.inactive {\n    display: none;\n}\n\n\n.page-header {\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    padding: 12px;\n    background-color: #0284C7;\n}\n\n.page-header > img {\n    margin-left: 45px;\n    height: 108px;\n}\n\n.sidebar,.main {\n    min-height: 100vh;\n}\n\n\n.sidebar {\n    display: flex;\n    grid-area: sidebar;\n    max-width: 1fr;\n    margin-top: 30px;\n    background-color: #0284C7;\n}\n\n.sidebar * {\n    cursor: pointer;\n}\n\nhx {\n    cursor: pointer;\n}\n\n#options {\n    list-style-type: none;\n}\n\n#project-list {\n    cursor: pointer;\n    word-break: break-all;\n    list-style-type: none;\n}\n\n\n/* Project text */\n\n#project-list > li {\n    list-style-type: none;\n}\n\n\n\n.main {\n    padding: 50px 220px;\n    grid-area: main;\n}\n\n.todo-wrapper {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n    \n}\n\n.todo-wrapper button {\n    background-color: #0284C7;\n    color: white;\n    width: fit-content;\n    font-weight: 800;\n    font-size: 24px;\n    padding: 6px;\n    cursor: pointer;\n}\n\n.todo-wrapper button:hover {\n    color: #0284C7;\n    background-color: white;\n}\n\n.todos {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    flex-wrap: wrap;\n    gap: 6px;\n}\n\n.todo {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    border: 2px solid red;\n    padding: 0px 8px;\n}\n\n#todo-title,#todo-description {\n    word-break: break-all;\n}\n\n#priority {\n    font-size: 36px;\n    color: red;\n    font-weight: 800;\n}\n\n.todo-actions,\n.todo-status {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.todo-actions img,\n.todo-status img {\n    height: 32px;\n}\n\n.todo-actions:hover {\n    cursor: pointer;\n}\n\nfooter {\n    grid-area: footer;\n    position: relative;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    padding: 20px;\n    text-align: center;\n    background-color: #000;\n    color: #fff\n}\n\n.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%) scale(0);\n    transition: 200ms ease-in-out;\n    border: 1px solid black;\n    border-radius: 12px;\n    z-index: 10;\n    background-color: white;\n    width: 500px;\n    max-width: 80%;\n}\n\n.modal.active {\n    transform: translate(-50%,-50%) scale(1);\n}\n\n.modal-header {\n    padding: 10px 15px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid black;\n}\n\n.modal-header .title {\n    font-size: 1.25rem;\n    font-weight: bold;\n}\n\n.modal-header .close-button {\n    border: none;\n    outline: none;\n    cursor: pointer;\n    background: none;\n    font-size: 2rem;\n    font-weight: bold;\n}\n\n.modal-body {\n    padding: 10px 15px;\n}\n\n.modal-body form {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n\n.modal-body form button {\n    min-width: 10%;\n    max-width: 20%;\n}\n\n.modal-body div {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.modal-body textarea {\n    min-width: 100px;\n    max-width: 300px;\n    min-height: 100px;\n    max-height: 300px;\n    resize: none;\n}\n\n#overlay {\n    position: fixed;\n    opacity: 0; \n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, .5);\n    pointer-events: none;\n    transition: 200ms ease-in-out;\n}\n\n#overlay.active {\n    opacity: 1;\n    pointer-events: all;\n}'],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var d=n[A],c=o.base?d[0]+o.base:d[0],s=a[c]||0,l="".concat(c," ").concat(s);a[c]=s+1;var p=t(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=r(m,o);o.byIndex=A,e.splice(A,0,{identifier:l,updater:u,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var d=o(n,r),c=0;c<a.length;c++){var s=t(a[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),a=t(569),i=t.n(a),A=t(565),d=t.n(A),c=t(216),s=t.n(c),l=t(589),p=t.n(l),m=t(890),u={};function C(n){const e=JSON.parse(localStorage.getItem("Projects"));if(e.map((n=>n.toLowerCase())).includes(n.toLowerCase()))return!1;e.push(n),localStorage.setItem("Projects",JSON.stringify(e))}function B(){const n=[];return Object.keys(localStorage).forEach((e=>{"Projects"!==e&&n.push(JSON.parse(localStorage.getItem(e)))})),n}u.styleTagTransform=p(),u.setAttributes=d(),u.insert=i().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=s(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;const I=(n=e)=>{const e=document.querySelector(".todos");for(;n.firstChild;)n.removeChild(n.lastChild)},g=()=>{const n=document.getElementById("todo-modal"),e=document.getElementById("overlay");n.classList.contains("active")&&e.classList.contains("active")?(n.classList.remove("active"),e.classList.remove("active")):(n.classList.add("active"),e.classList.add("active"))},f=(n=B())=>{const e=document.querySelector(".todos"),t=document.querySelector(".todo-wrapper");I(e),n.sort().join(",")===B().sort().join(",")&&I(t),n.forEach((n=>{const t=document.createElement("div");t.className="todo",t.id=n.id;const o=document.createElement("div");o.className="todo-status";const r=document.createElement("span");r.id="priority",!0===n.urgent&&(r.textContent="!");const a=document.createElement("h3");a.id="todo-title",a.textContent=n.title;const i=document.createElement("span");i.id="todo-description",i.textContent=n.description;const A=document.createElement("span");A.id="todo",A.textContent=n.date;const d=document.createElement("div");d.className="todo-actions";const c=document.createElement("img");c.id="completed-todo",c.setAttribute("src","completed.png"),c.setAttribute("alt","Completed");const s=document.createElement("img");s.className="edit-todo",s.id=n.id,s.setAttribute("src","edit.png"),s.setAttribute("alt","Edit");const l=document.createElement("img");l.className="delete-todo",l.id=n.id,l.setAttribute("src","delete.png"),l.setAttribute("alt","Delete"),n.completed&&o.appendChild(c),o.appendChild(r),d.appendChild(s),d.appendChild(l),t.appendChild(o),t.appendChild(a),t.appendChild(i),t.appendChild(A),t.appendChild(d),e.appendChild(t)}))},x=()=>{const n=document.getElementById("project-modal"),e=document.getElementById("overlay");n.classList.contains("active")&&e.classList.contains("active")?(n.classList.remove("active"),e.classList.remove("active")):(n.classList.add("active"),e.classList.add("active"))},h=(n,e)=>{let t=function(n){switch(n){case"urgent":return"Urgent";case"completed":return"Completed";case"date":return"Today´s"}};const o=document.querySelector(".todo-wrapper");I(o);let r=document.getElementById("todos-title");if(r)r.textContent=`${t} todos`;else{const e=document.querySelector(".todo-wrapper"),o=document.createElement("h2");o.id="todo-title",o.textContent=`${t(n)} todos`,e.appendChild(o)}f(function(n,e){const t=B(),o=[];for(let r of t)r[n]===e&&o.push(r);return o}(n,e))};document.addEventListener("DOMContentLoaded",(()=>{(()=>{const n=document.querySelector(".todos"),e=document.getElementById("project-list"),t=JSON.parse(localStorage.getItem("Projects")),o=document.querySelector(".todo-wrapper");I(e);const r=document.createElement("h2");r.id="todos-title";const a=document.createElement("button");a.id="new-project-btn",a.textContent="New Project",e.appendChild(a),t.forEach((t=>{I(o);const a=document.createElement("li");a.textContent=t,a.addEventListener("click",(()=>{I(n),I(o);const e=document.createElement("button");e.className="add-todo",e.id=t.id,e.textContent="+ Add Todo",e.addEventListener("click",(()=>{g(),document.getElementById("todo-modal").addEventListener("submit",(()=>{const n=getProject(t);console.log(n);const e=document.getElementById("todo-name").value,o=document.getElementById("new-todo-description").value,r=document.getElementById("todo-date").value;let a;a=!!document.getElementById("todo-priority").checked,new Todo(e,o,r,a).addTodo(n),f(Array.from(n.project_todos))}))})),r.textContent=t,o.appendChild(e),o.appendChild(r);const a=function(n){const e=[];return B().forEach((t=>{t.project===n&&e.push(t)})),e}(t);f(a)})),e.appendChild(a)}))})(),console.log(B()),C("lel"),document.getElementById("new-project-btn").addEventListener("click",x),document.querySelector(".create-project-btn").addEventListener("click",(()=>{C(String(document.getElementById("project-name").value)),x()})),document.getElementById("close-project").addEventListener("click",x),document.getElementById("close-todo").addEventListener("click",g),document.getElementById("sidebar-todos").addEventListener("click",(()=>{f(),document.getElementById("todos-title").textContent="Every Todos"}));const n=document.getElementById("urgent-todos"),e=document.getElementById("completed-todos"),t=document.getElementById("date-todos");n.addEventListener("click",(()=>{h("urgent",!0)})),e.addEventListener("click",(()=>{h("completed",!0)})),t.addEventListener("click",(()=>{h("date",(new Date).toISOString().slice(0,10))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,