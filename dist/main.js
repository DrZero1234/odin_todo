(()=>{"use strict";var n,e,r,a,t,o,i,s,c,d,A,l,p,u,f={890:(n,e,r)=>{r.d(e,{Z:()=>s});var a=r(537),t=r.n(a),o=r(645),i=r.n(o)()(t());i.push([n.id,'html, body {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-areas: "header header"\n                         "sidebar main"\n                         "sidebar main"\n                         "footer footer"\n\n}\n\n.page-header {\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    padding: 12px;\n    background-color: #0284C7;\n}\n\n.page-header > img {\n    margin-left: 45px;\n    height: 108px;\n}\n\n\n.sidebar {\n    display: flex;\n    flex: 1;\n    grid-area: sidebar;\n    margin-top: 30px;\n    background-color: #0284C7;\n    height: 100vh;\n}\n\n.main {\n    border: 2px solid black;\n    padding: 40px;\n    display: flex;\n    flex: 1;\n    grid-area: main;\n}\n\n.todo {\n    display: flex;\n    gap: 20px;\n    border: 2px solid red;\n\n}\n\nfooter {\n    grid-area: footer;\n    padding: 20px;\n    text-align: center;\n    background-color: #000;\n    color: #fff\n}',"",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B;;;;;AAKJ;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,aAAa;AACjB;;;AAGA;IACI,aAAa;IACb,OAAO;IACP,kBAAkB;IAClB,gBAAgB;IAChB,yBAAyB;IACzB,aAAa;AACjB;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,aAAa;IACb,OAAO;IACP,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,qBAAqB;;AAEzB;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,kBAAkB;IAClB,sBAAsB;IACtB;AACJ",sourcesContent:['html, body {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-areas: "header header"\n                         "sidebar main"\n                         "sidebar main"\n                         "footer footer"\n\n}\n\n.page-header {\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    padding: 12px;\n    background-color: #0284C7;\n}\n\n.page-header > img {\n    margin-left: 45px;\n    height: 108px;\n}\n\n\n.sidebar {\n    display: flex;\n    flex: 1;\n    grid-area: sidebar;\n    margin-top: 30px;\n    background-color: #0284C7;\n    height: 100vh;\n}\n\n.main {\n    border: 2px solid black;\n    padding: 40px;\n    display: flex;\n    flex: 1;\n    grid-area: main;\n}\n\n.todo {\n    display: flex;\n    gap: 20px;\n    border: 2px solid red;\n\n}\n\nfooter {\n    grid-area: footer;\n    padding: 20px;\n    text-align: center;\n    background-color: #000;\n    color: #fff\n}'],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",a=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),a&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),a&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,a,t,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);a&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),r&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=r):A[2]=r),t&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=t):A[4]="".concat(t)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),t="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(t," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,a=0;a<e.length;a++)if(e[a].identifier===n){r=a;break}return r}function a(n,a){for(var o={},i=[],s=0;s<n.length;s++){var c=n[s],d=a.base?c[0]+a.base:c[0],A=o[d]||0,l="".concat(d," ").concat(A);o[d]=A+1;var p=r(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=t(u,a);a.byIndex=s,e.splice(s,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function t(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,t){var o=a(n=n||[],t=t||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=r(o[i]);e[s].references--}for(var c=a(n,t),d=0;d<o.length;d++){var A=r(o[d]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=c}}},569:n=>{var e={};n.exports=function(n,r){var a=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var a="";r.supports&&(a+="@supports (".concat(r.supports,") {")),r.media&&(a+="@media ".concat(r.media," {"));var t=void 0!==r.layer;t&&(a+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),a+=r.css,t&&(a+="}"),r.media&&(a+="}"),r.supports&&(a+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},g={};function m(n){var e=g[n];if(void 0!==e)return e.exports;var r=g[n]={id:n,exports:{}};return f[n](r,r.exports,m),r.exports}m.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return m.d(e,{a:e}),e},m.d=(n,e)=>{for(var r in e)m.o(e,r)&&!m.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},m.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),m.nc=void 0,n=m(379),e=m.n(n),r=m(795),a=m.n(r),t=m(569),o=m.n(t),i=m(565),s=m.n(i),c=m(216),d=m.n(c),A=m(589),l=m.n(A),p=m(890),(u={}).styleTagTransform=l(),u.setAttributes=s(),u.insert=o().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=d(),e()(p.Z,u),p.Z&&p.Z.locals&&p.Z.locals,document.addEventListener("DOMContentLoaded",(()=>{})),console.log(`Projects: ${JSON.parse(localStorage.getItem("Todos"))}`),console.log("Testing")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,