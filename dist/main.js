(()=>{"use strict";var n={890:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,'html, body {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: minmax(auto,400px) minmax(250px,1fr);\n    grid-template-rows: min-content 1fr  min-content;\n    grid-template-areas: "header header"\n                         "sidebar main"\n                         "sidebar main"\n                         "footer footer"\n\n}\n\n/* HIDE ELEMENTS WHILE TOGGLING */\n.inactive {\n    display: none;\n}\n\n\n.page-header {\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    padding: 12px;\n    background-color: #0284C7;\n}\n\n.page-header > img {\n    margin-left: 45px;\n    height: 108px;\n}\n\n.sidebar,.main {\n    min-height: 100vh;\n}\n\n\n.sidebar {\n    display: flex;\n    grid-area: sidebar;\n    max-width: 1fr;\n    margin-top: 30px;\n    background-color: #0284C7;\n}\n\n.sidebar * {\n    cursor: pointer;\n}\n\nhx {\n    cursor: pointer;\n}\n\n#options {\n    list-style-type: none;\n}\n\n#project-list {\n    cursor: pointer;\n    word-break: break-all;\n    list-style-type: none;\n}\n\n\n/* Project text */\n\n#project-list > li {\n    list-style-type: none;\n}\n\n\n\n.main {\n    padding: 50px 220px;\n    grid-area: main;\n}\n\n.todo-wrapper {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n    \n}\n\n.todo-wrapper button {\n    background-color: #0284C7;\n    color: white;\n    width: fit-content;\n    font-weight: 800;\n    font-size: 24px;\n    padding: 6px;\n    cursor: pointer;\n}\n\n.todo-wrapper button:hover {\n    color: #0284C7;\n    background-color: white;\n}\n\n.todos {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    flex-wrap: wrap;\n    gap: 6px;\n}\n\n.todo {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    border: 2px solid red;\n    padding: 0px 8px;\n}\n\n#todo-title,#todo-description {\n    word-break: break-all;\n}\n\n#priority {\n    font-size: 36px;\n    color: red;\n    font-weight: 800;\n}\n\n.todo-actions {\n    display: flex;\n    gap: 10px;\n}\n\n.todo-actions img {\n    height: 32px;\n}\n\n.todo-actions:hover {\n    cursor: pointer;\n}\n\nfooter {\n    grid-area: footer;\n    position: relative;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    padding: 20px;\n    text-align: center;\n    background-color: #000;\n    color: #fff\n}',"",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,2DAA2D;IAC3D,gDAAgD;IAChD;;;;;AAKJ;;AAEA,iCAAiC;AACjC;IACI,aAAa;AACjB;;;AAGA;IACI,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;;;AAGA;IACI,aAAa;IACb,kBAAkB;IAClB,cAAc;IACd,gBAAgB;IAChB,yBAAyB;AAC7B;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,qBAAqB;IACrB,qBAAqB;AACzB;;;AAGA,iBAAiB;;AAEjB;IACI,qBAAqB;AACzB;;;;AAIA;IACI,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,cAAc;IACd,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,OAAO;IACP,eAAe;IACf,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,OAAO;IACP,mBAAmB;IACnB,8BAA8B;IAC9B,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,OAAO;IACP,aAAa;IACb,kBAAkB;IAClB,sBAAsB;IACtB;AACJ",sourcesContent:['html, body {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: minmax(auto,400px) minmax(250px,1fr);\n    grid-template-rows: min-content 1fr  min-content;\n    grid-template-areas: "header header"\n                         "sidebar main"\n                         "sidebar main"\n                         "footer footer"\n\n}\n\n/* HIDE ELEMENTS WHILE TOGGLING */\n.inactive {\n    display: none;\n}\n\n\n.page-header {\n    grid-area: header;\n    display: flex;\n    align-items: center;\n    padding: 12px;\n    background-color: #0284C7;\n}\n\n.page-header > img {\n    margin-left: 45px;\n    height: 108px;\n}\n\n.sidebar,.main {\n    min-height: 100vh;\n}\n\n\n.sidebar {\n    display: flex;\n    grid-area: sidebar;\n    max-width: 1fr;\n    margin-top: 30px;\n    background-color: #0284C7;\n}\n\n.sidebar * {\n    cursor: pointer;\n}\n\nhx {\n    cursor: pointer;\n}\n\n#options {\n    list-style-type: none;\n}\n\n#project-list {\n    cursor: pointer;\n    word-break: break-all;\n    list-style-type: none;\n}\n\n\n/* Project text */\n\n#project-list > li {\n    list-style-type: none;\n}\n\n\n\n.main {\n    padding: 50px 220px;\n    grid-area: main;\n}\n\n.todo-wrapper {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n    \n}\n\n.todo-wrapper button {\n    background-color: #0284C7;\n    color: white;\n    width: fit-content;\n    font-weight: 800;\n    font-size: 24px;\n    padding: 6px;\n    cursor: pointer;\n}\n\n.todo-wrapper button:hover {\n    color: #0284C7;\n    background-color: white;\n}\n\n.todos {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    flex-wrap: wrap;\n    gap: 6px;\n}\n\n.todo {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    border: 2px solid red;\n    padding: 0px 8px;\n}\n\n#todo-title,#todo-description {\n    word-break: break-all;\n}\n\n#priority {\n    font-size: 36px;\n    color: red;\n    font-weight: 800;\n}\n\n.todo-actions {\n    display: flex;\n    gap: 10px;\n}\n\n.todo-actions img {\n    height: 32px;\n}\n\n.todo-actions:hover {\n    cursor: pointer;\n}\n\nfooter {\n    grid-area: footer;\n    position: relative;\n    bottom: 0;\n    right: 0;\n    left: 0;\n    padding: 20px;\n    text-align: center;\n    background-color: #000;\n    color: #fff\n}'],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);o&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var A=n[s],d=o.base?A[0]+o.base:A[0],c=i[d]||0,l="".concat(d," ").concat(c);i[d]=c+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=s,e.splice(s,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var A=o(n,r),d=0;d<i.length;d++){var c=t(i[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),a=t.n(i),s=t(565),A=t.n(s),d=t(216),c=t.n(d),l=t(589),p=t.n(l),u=t(890),m={};m.styleTagTransform=p(),m.setAttributes=A(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=c(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var f,g=new Uint8Array(16);function C(){if(!f&&!(f="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return f(g)}const h=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,I=function(n){return"string"==typeof n&&h.test(n)};for(var B=[],y=0;y<256;++y)B.push((y+256).toString(16).substr(1));const x=function(n,e,t){var o=(n=n||{}).random||(n.rng||C)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,e){t=t||0;for(var r=0;r<16;++r)e[t+r]=o[r];return e}return function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=(B[n[e+0]]+B[n[e+1]]+B[n[e+2]]+B[n[e+3]]+"-"+B[n[e+4]]+B[n[e+5]]+"-"+B[n[e+6]]+B[n[e+7]]+"-"+B[n[e+8]]+B[n[e+9]]+"-"+B[n[e+10]]+B[n[e+11]]+B[n[e+12]]+B[n[e+13]]+B[n[e+14]]+B[n[e+15]]).toLowerCase();if(!I(t))throw TypeError("Stringified UUID is invalid");return t}(o)};class b{constructor(n){this.id=x(),this.project_todos=new Array,this.name=n}storeProject(){return localStorage.setItem(this.id,JSON.stringify(this)),this}pushTodo(n){this.project_todos.push(JSON.stringify(n)),localStorage.setItem(this.id,JSON.stringify(this))}}class v{constructor(n,e,t,o,r="unfinished"){this.id=x(),this.title=n,this.description=e,this.date=t,this.priority=o,this.status=r}}function E(){return JSON.parse(localStorage.getItem("Projects"))}document.addEventListener("DOMContentLoaded",(()=>{}));const w=(n=e)=>{const e=document.querySelector(".todos");for(;n.firstChild;)n.removeChild(n.lastChild)},j=n=>{const e=document.querySelector(".todos");w(e),Array.from(n).forEach((n=>{const t=document.createElement("div");t.className="todo",t.id=n.id;const o=document.createElement("span");o.id="priority","urgent"===n.priority&&(o.textContent="!");const r=document.createElement("h3");r.id="todo-title",r.textContent=n.title;const i=document.createElement("span");i.id="todo-description",i.textContent=n.description;const a=document.createElement("span");a.id="todo",a.textContent=n.date;const s=document.createElement("div");s.className="todo-actions";const A=document.createElement("img");A.id="edit-todo",A.setAttribute("src","edit.png"),A.setAttribute("alt","Edit");const d=document.createElement("img");d.id="del-todo",d.setAttribute("src","delete.png"),d.setAttribute("alt","Delete"),s.appendChild(A),s.appendChild(d),t.appendChild(o),t.appendChild(r),t.appendChild(i),t.appendChild(a),t.appendChild(s),e.appendChild(t)}))};document.addEventListener("DOMContentLoaded",(()=>{(function(){localStorage.clear();let n=new b("Project1"),e=new b("Project2"),t=new v("Todo1","First todo","2022-12-31","normal"),o=new v("Todo2","Second todo","1939-09-01","normal");n.storeProject(),e.storeProject(),n.pushTodo(t),n.pushTodo(o),console.log(n),console.log("lel")})(),(()=>{const n=document.querySelector(".todos"),e=document.getElementById("project-list"),t=E();w(e);const o=document.createElement("button");o.id="new-project-btn",o.textContent="New Project",e.appendChild(o),t.forEach((t=>{const o=document.createElement("li");o.textContent=t.name,o.id=t.id,o.addEventListener("click",(()=>{w(n),j(function(n){for(let e of E())if(e.id===n)return e}(t.id)),document.getElementById("todos-title").textContent=t.name})),e.appendChild(o)}))})();const n=document.getElementById("sidebar-todos"),e=document.getElementById("projects"),t=document.getElementById("project-list"),o=t.querySelectorAll("li");console.log(t),e.addEventListener("click",(()=>{var n;"active"===(n=t).className?n.className="inactive":n.className="active"})),n.addEventListener("click",(()=>{j(),document.getElementById("todos-title").textContent="Every Todos"})),console.log(o),j()})),console.log(void 0),E()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,